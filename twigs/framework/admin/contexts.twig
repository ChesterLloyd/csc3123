{% set ajax = TRUE %}

{% extends '@content/page.twig' %}

{% import '@util/formmacro.twig' as f %}
{% import '@util/modalmacro.twig' as m %}
{% import _self as h %}

{% block scripts %}
    <script {{h.urlattr(fwurls.utiljs)}}></script>
    <script {{h.urlattr(fwurls.parsley)}}></script>
{% endblock scripts %}

{% block onload %}
    $('#ncform').on('submit', false).parsley();
    $('#addb').on('click', function(e){
        e.preventDefault();
        var pn = $('#ncname').val();
        if (!pn.match(/^[a-zA-Z][a-zA-Z0-9]*$/))
        {
            bootbox.alert('&quot;'+pn+'&quot; is not a valid context name. Letters and numbers only');
            return;
        }
        var sp = null;
        var error = false;
        $('.cname').each(function(e){
            var t = $(this).text();
            if (t == pn)
            {
                error = true;
                return false;
            }
            if (t > pn)
            {
                sp = $(this);
                return false;
            };
        })
        if (error)
        {
            bootbox.alert('That context already exists');
            return;
        }
        $('#ncontext').modal('hide');
        var htm = '<tr><td>'+pn+'</td><td>'+mktoggle('fixed', 0)+'</td><td><i class="delb far fa-trash-alt"></i></td></tr>';
        var nx;
        if (sp == null)
        {
            nx = $(htm).appendTo($('#ctab tbody'));
        }
        else
        {
            nx = $(htm).insertBefore(sp.parent());
        }
        $.post('{{base}}/ajax/bean/rolecontext/', {
            name : pn,
        }).done(function(data){
	       nx.data('id', data);
        }).fail(function(jqXHR, textStatus, errorThrown){
            bootbox.alert('<h3>Failed to create new context</h3>'+jqXHR.responseText);
        });
    })
    $('#ctab').on('click', function(e){
        var x = $(e.target);
        if (x.hasClass('delb'))
        {
                dodelbean(e, x, 'rolecontext');
        }
        else if (x.hasClass('fixed'))
        {
            dotoggle(e, x, 'rolecontext', 'fixed');
        }
    })
    $('#ncontext').on('show.bs.modal', function(e){
        $('#ncform input').val('');
    });
{% endblock onload %}

{% if not page is defined %}
    {% set page = 1 %}
    {% set pagesize = 10 %}
{% endif %}

{% set pages = (siteinfo.count('rolecontext') + pagesize)/pagesize %}

{% block header %}
    <section class="col-md-12 mt-5">
	<h1>Role Contexts</h1>
    </section>
{% endblock header %}

{% block main %}
    {% import _self as h %}
    <section class="row">
        <article class="ml-auto col-md-10 mr-auto">
            {% include '@util/paginate.twig' with { page : page, pagesize: pagesize, pages: pages} %}
            <table class="table table-striped table-hover" id="ctab">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Fixed</th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    {% for c in siteinfo.contexts(page, pagesize) %}
                        <tr data-id="{{c.id}}">
                            <td class="cname">{{c.name}}</td>
                            <td>{{f.tick(c.fixed, 'fixed')}}</td>
                            <td>{% if c.fixed %}&nbsp;{% else %}<i class="delb far fa-trash-alt"></i>{% endif %}</td>
                        </tr>
                    {% else %}
                        <tr><td colspan="3">No contexts defined</td></tr>
                    {% endfor %}
                </tbody>
            </table>
            {% include '@util/paginate.twig' with { page : page, pagesize: pagesize, pages: pages} %}
            <p><button class="btn btn-primary" data-toggle="modal" data-target="#ncontext" type="button">Add Context</button></p>
        </article>
    </section>
    {{m.open({id: 'ncontext', title: 'New Context'})}}
    <div class="modal-body">
        <form action="#" method="POST" id="nrform">
            {{f.text({id: 'ncname', label: 'Name', ph: 'Context Name', required: TRUE, parsley: { trigger: 'change',
            'remote-reverse': 'false', remote: base~'/ajax/unique/rolecontext/name/{value}',
            'remote-message': 'That context name is not available', type: 'alphanum'} })}}
        </form>
    </div>
    {{m.close({action: 'Add', id: 'addb'})}}
{% endblock main %}

{% block pagefooter %}
{% endblock pagefooter %}
